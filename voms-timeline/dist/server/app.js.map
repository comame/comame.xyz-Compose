{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/API/YouTubeApiOptions/SearchAPIOptions.ts","webpack:///./src/API/YouTubeApiOptions/VideosAPIOptions.ts","webpack:///./src/config/apiEndpoints.ts","webpack:///./src/config/channels.ts","webpack:///./src/server/app.ts","webpack:///./src/server/cache.ts","webpack:///./src/server/dotenv.ts","webpack:///./src/server/fetch.ts","webpack:///./src/server/fetchVideo.ts","webpack:///./src/server/websubExpressHandler.ts","webpack:///./src/util/DateString.ts","webpack:///./src/util/urlQueryBuilder.ts","webpack:///./src/util/videoTime.ts","webpack:///external \"crypto\"","webpack:///external \"express\"","webpack:///external \"fast-xml-parser\"","webpack:///external \"fs\"","webpack:///external \"https\"","webpack:///external \"mongodb\"","webpack:///external \"path\""],"names":[],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server/app.ts\");\n","import { Thumbnails } from './Thumbnails'\nimport { DateString } from '../../util/DateString';\n\nexport interface SearchAPIOptions {\n    part: Array<'id'|'snippet'>\n    channelId?: string\n    eventType?: 'completed'|'live'|'upcoming'\n    maxResults?: number\n    order?: 'date'|'rating'|'relevance'\n    type?: 'video'\n    key?: string\n}\n\nexport interface SearchAPIResponse {\n    kind: 'youtube#searchListResponse'\n    etag: string\n    nextPageToken: string\n    prevPageToken: string\n    pageInfo: {\n        totalResults: number\n        resultsPerPage: number\n    }\n    items: SearchResult[]\n}\n\nexport function isSearchAPIResponse(arg: any): arg is SearchAPIResponse {\n    return typeof arg == 'object' && arg.kind == 'youtube#searchListResponse'\n}\n\nexport interface SearchResult {\n    kind: 'youtube#searchResult'\n    etag: string\n    id?: {\n        kind: string\n        videoId?: string\n    }\n    snippet?: {\n        publishedAt: DateString\n        channelId: string\n        title: string\n        description: string\n        thumbnails: Thumbnails\n    }\n    channelTitle: string\n}\n","import { Thumbnails } from './Thumbnails'\nimport { DateString } from '../../util/DateString';\n\nexport interface VideoAPIOptions {\n    part: Array<'id'|'snippet'|'contentDetails'|'liveStreamingDetails'|'player'|'status'>\n    id: string[]\n    maxResults?: number\n    key?: string\n}\n\nexport interface VideoAPIResponse {\n    kind: 'youtube#videoListResponse'\n    etag: string\n    nextPageToken?: string\n    prevPageToken?: string\n    pageInfo: {\n        totalResults: number\n        resultsPerPage: number\n    }\n    items: Video[]\n}\n\nexport interface Video {\n    kind: 'youtube#video'\n    etag: string\n    id: string\n    snippet?: {\n        publishedAt: DateString\n        channelId: string\n        title: string\n        description: string\n        thumbnails: Thumbnails\n        channelTitle: string\n        liveBroadcastContent?: 'live'|'none'|'upcoming'\n    }\n    contentDetails?: {\n        duration: string\n    }\n    player?: {\n        embedHtml: string\n    }\n    liveStreamingDetails?: {\n        actualStartTime?: DateString\n        actualEndTime?: DateString\n        scheduledStartTime?: DateString\n    }\n}\n\nexport function isVideoAPIResponse(arg: any): arg is VideoAPIResponse {\n    return typeof arg == 'object' && arg.kind == 'youtube#videoListResponse'\n}\n","export const youtube = {\n    search: 'https://www.googleapis.com/youtube/v3/search',\n    activities: 'https://www.googleapis.com/youtube/v3/activities',\n    videos: 'https://www.googleapis.com/youtube/v3/videos'\n}\n\nexport const self = {\n    videos: '/api/videos'\n}\n","export const channels = {\n    '天野ピカミィ': 'UCajhBT4nMrg3DLS-bLL2RCg',\n    '緋笠トモシカ': 'UC3vzVK_N_SUVKqbX69L_X4g',\n    '磁富モノエ': 'UCaFhsCKSSS821N-EcWmPkUQ',\n}\n","import path from 'path'\nimport express, { Response } from 'express'\nimport { MongoClient, Db } from 'mongodb'\nimport { websubExpressHandler } from './websubExpressHandler'\nimport { fetchVideo, searchVideos } from './fetchVideo'\nimport { cacheResponse, getCached } from './cache'\nimport { VideosResponse } from '../API/selfApiOptions/options'\n\nconst app = express()\nlet db: Db\n\n// Parse body as string\n// @ts-ignore: res unused\napp.use((req, res, next) => {\n    let bodyText = ''\n    req.on('data', (chunk: Buffer|string) => {\n        if (typeof chunk == 'string') {\n            bodyText += chunk\n        } else {\n            bodyText += chunk.toString('utf8')\n        }\n    })\n    req.on('end', () => {\n        req.body = bodyText\n        next()\n    })\n})\n\napp.get('**', express.static(path.resolve(__dirname, '../front')))\napp.all('/sub/hook', async (req, res) => {\n    const videoId = await websubExpressHandler(req, res, db)\n    if (!videoId) return\n    const videos = await fetchVideo([ videoId ])\n    if (videos?.length == 0 || typeof videos == 'undefined') return\n\n    await cacheResponse(db, videos)\n})\n\n// @ts-ignore: req unused\napp.get('/sub/logs', async (req, res) => {\n    const data = await db.collection('subs-log').find().sort({ time: -1 }).limit(100).toArray()\n    res.send(JSON.stringify(data, void 0, 2))\n})\n\n// @ts-ignore: req unused\napp.get('/api/videos', async (req, res: Response<VideosResponse>) => {\n    const { videos, lastUpdated, lastFetch } = await getCached(db)\n    res.send({\n        kind: 'voms-timeline.comame.xyz#videosResponse',\n        items: videos,\n        lastUpdated: new Date(lastUpdated).toISOString()\n    })\n\n    if (Date.now() - 24 * 60 * 60 * 1000 / 5 >= lastFetch) {\n        console.log('SEARCH VIDEOS')\n        const videoIds = await searchVideos()\n        if (videoIds.length == 0) {\n            return\n        }\n        const videos = await fetchVideo(videoIds)\n        if (videos?.length == 0 || typeof videos == 'undefined') return\n        await cacheResponse(db, videos, Date.now())\n    }\n})\n\nMongoClient.connect('mongodb://mongo:27017', { useUnifiedTopology: true }, (err, client) => {\n    if (err) throw err\n    db = client.db('voms-timeline')\n\n    app.listen(80, () => {\n        console.log('LISTEN')\n    })\n})\n","import { Db, Collection } from 'mongodb'\nimport { Video } from \"../API/YouTubeApiOptions/VideosAPIOptions\";\nimport { getVideoTime } from '../util/videoTime';\n\ninterface CacheMeta {\n    lastUpdated: number,\n    lastFetch?: number\n}\n\ninterface VideoCache {\n    _id: Video['id'],\n    time: number,\n    item: Video,\n    update: number\n}\n\nexport async function cacheResponse(db: Db, videos: Video[], lastFetch?: number) {\n    const metadataCollection: Collection<CacheMeta> = db.collection('metadata')\n\n    const metaUpdate = lastFetch ? {\n        lastUpdated: new Date().getTime(),\n        lastFetch\n    } : {\n        lastUpdated: new Date().getTime()\n    }\n\n    await metadataCollection.updateOne({}, {\n        '$set': metaUpdate\n    }, {\n        upsert: true\n    })\n\n    const videosCollection: Collection<VideoCache> = db.collection('videos')\n    await Promise.all(videos.map(video => videosCollection.updateOne({\n        _id: video.id\n    }, {\n        '$set': {\n            _id: video.id,\n            time: getVideoTime(video).getTime(),\n            item: video,\n            update: Date.now()\n        }\n    }, {\n        upsert: true\n    })))\n}\n\nexport async function getCached(db: Db, limit: number = 50): Promise<{\n    lastUpdated: number,\n    lastFetch: number,\n    videos: Video[]\n}> {\n    const metadataCollection: Collection<CacheMeta> = db.collection('metadata')\n    const videosCollection: Collection<VideoCache> = db.collection('videos')\n\n    const cacheMetadata = await metadataCollection.findOne({})\n    const videoCaches = await videosCollection.find()\n        .sort('time', -1)\n        .limit(limit)\n        .toArray()\n\n    const videos = videoCaches.map(it => it.item)\n    const lastUpdated = cacheMetadata?.lastUpdated ?? 0\n    const lastFetch = cacheMetadata?.lastFetch ?? 0\n\n    return { lastUpdated, lastFetch, videos }\n}\n","import fs from 'fs'\nimport { resolve } from 'path'\n\nexport const dotenv: { [ key: string ]: string } = Object.fromEntries(\n    fs.readFileSync(resolve(__dirname, '../../.env'), {\n        encoding: 'utf8'\n    }).split('\\n').map(line => line.split('='))\n)\n","import https from 'https'\n\nexport interface HTTPHeaders {\n    [key: string]: string\n}\n\nexport interface FetchOptions {\n    method?: 'GET'\n    headers?: HTTPHeaders\n}\n\nexport async function fetch(url: string, option?: FetchOptions): Promise<Response> {\n    return new Promise((resolve, reject) => {\n        const req = https.request(url, option ?? {}, (res) => {\n            let responseText = ''\n\n            res.on('data', (chunk: Uint8Array | string) => {\n                if (typeof chunk == 'string') {\n                    responseText += chunk\n                } else {\n                    responseText += new TextDecoder('utf-8').decode(chunk)\n                }\n            })\n\n            res.on('end', () => {\n                const headers = {} as HTTPHeaders\n                for (const key of Object.keys(res.headers)) {\n                    const value: string | string[] | undefined = res.headers[key]\n                    if (typeof value == 'undefined') continue\n                    if (Array.isArray(value)) {\n                        headers[key] = value.join(' ')\n                        continue\n                    }\n                    headers[key] = value\n                }\n\n                resolve(new Response(\n                    headers,\n                    res.statusCode!!,\n                    res.url!!,\n                    responseText\n                ))\n            })\n        })\n\n        req.on('error', (err) => {\n            reject(err)\n        })\n\n        req.end()\n    })\n}\n\nexport class Response {\n    public ok: boolean\n    public json: () => Promise<{}>\n    public text: () => Promise<string>\n\n    constructor(\n        public headers: HTTPHeaders,\n        public status: number,\n        public url: string,\n        responseText: string\n    ){\n        if (200 <= status && status < 300) {\n            this.ok = true\n        } else {\n            this.ok = false\n        }\n\n        this.json = async () => JSON.parse(responseText)\n        this.text = async () => responseText\n    }\n}\n","import { VideoAPIOptions, Video, isVideoAPIResponse } from '../API/YouTubeApiOptions/VideosAPIOptions'\nimport { fetch } from './fetch'\nimport { youtube as endpoints } from '../config/apiEndpoints'\nimport { dotenv } from './dotenv'\nimport { buildUrlQuery } from '../util/urlQueryBuilder'\nimport { SearchAPIOptions, isSearchAPIResponse, SearchAPIResponse } from '../API/YouTubeApiOptions/SearchAPIOptions'\nimport { channels } from '../config/channels'\n\nexport async function fetchVideo(videoIds: string[]): Promise<Video[]|undefined> {\n    const options: VideoAPIOptions = {\n        part: ['id', 'snippet', 'liveStreamingDetails' ],\n        id: videoIds,\n        key: dotenv.GOOGLE_API_KEY\n    }\n    const requestUrl = buildUrlQuery(endpoints.videos, {\n        ...options,\n        part: options.part.join(','),\n        id: videoIds.join(',')\n    })\n\n    const res = await fetch(requestUrl)\n    const json = await res.json()\n\n    if (!isVideoAPIResponse(json)) {\n        throw 'ERROR'\n    }\n    return json.items\n}\n\nexport async function searchVideos(): Promise<string[]> {\n    const channelIds = Object.entries(channels).map(it => it[1])\n    const options: SearchAPIOptions[] = channelIds.map(id => ({\n        part: [ 'id', 'snippet' ],\n        channelId: id,\n        maxResults: 10,\n        order: 'date',\n        type: 'video',\n        key: dotenv.GOOGLE_API_KEY\n    }))\n    const requestUrls = options.map(option => ({\n        ...option,\n        part: option.part.join(',')\n    })).map(option => buildUrlQuery(endpoints.search, option))\n    const responses = await Promise.all(\n        requestUrls.map(url => fetch(url).then(res => res.json()))\n    )\n\n    if (!responses.every(it => isSearchAPIResponse(it))) {\n        console.log(responses)\n        return []\n    }\n\n    const videoIds: string[] = []\n    for (const res of responses as SearchAPIResponse[]) {\n        const _videoIds = res.items.map(it => it.id?.videoId!!)\n        videoIds.push(..._videoIds)\n    }\n\n    return videoIds\n}\n","import { Video } from '../API/YouTubeApiOptions/VideosAPIOptions'\nimport crypto from 'crypto'\nimport { Db } from 'mongodb';\nimport { parse as parseXml, validate as validateXml } from 'fast-xml-parser'\nimport { Request, Response } from 'express'\nimport { dotenv } from './dotenv'\nimport { channels } from '../config/channels'\n\nexport async function websubExpressHandler(req: Request, res: Response, db: Db): Promise<Video['id']|undefined> {\n    const queryObj = Object.fromEntries(req.originalUrl.split('?')[1]?.split('&').map(it => it.split('=')) ?? [])\n\n    const logRequest = async ( { queryObj, subscribeObject, result, rawBody = '' }: {\n        queryObj?: object,\n        subscribeObject?: object,\n        result: number,\n        rawBody?: string\n    }) => {\n        await db.collection('subs-log').insertOne({ time: Date.now(), req: {\n            url: req.originalUrl,\n            query: Object.fromEntries(Object.entries(queryObj ?? {}).map(it => {\n                return [ (it[0] as string).replace(/\\./g, '_'), it[1] ]\n            })),\n            method: req.method,\n            body: subscribeObject,\n            headers: req.headers,\n            result,\n            rawBody\n        } })\n    }\n\n    if (queryObj['hub.mode'] == 'subscribe') {\n        const acceptChannelIds = Object.entries(channels).map(it => it[1])\n        const acceptTopics = acceptChannelIds.map(id =>\n            ('https://www.youtube.com/xml/feeds/videos.xml?channel_id=' + id)\n                .replace(/\\?/g, '%3F')\n                .replace(/\\=/g, '%3D')\n        )\n\n        if (!acceptTopics.includes(queryObj['hub.topic'])) {\n            res.sendStatus(404)\n            await logRequest({ queryObj, result: 404 })\n        } else {\n            const challenge = queryObj['hub.challenge']\n            res.send(challenge)\n            await logRequest({ queryObj, result: 200 })\n        }\n        return\n    } else if (queryObj['hub.mode'] == 'unsubscribe') {\n        res.sendStatus(404)\n        await logRequest({ queryObj, result: 404 })\n        return\n    } else if (queryObj['hub.mode'] == 'denied') {\n        res.send()\n        await logRequest({ queryObj, result: 200 })\n        return\n    }\n\n    if (validateXml(req.body) !== true) {\n        const error = validateXml(req.body)\n        console.error('VALIDATE ERROR', error)\n        res.status(500).send('error')\n        await logRequest({ subscribeObject: req.body, result: 500, rawBody: req.body })\n        return\n    }\n\n    const hmacKey = dotenv.WEBSUB_HUB_SECRET\n    const hmacDigest = crypto.createHmac('sha1', hmacKey).update(req.body).digest('hex')\n    const requestedHmacDigest = req.header('x-hub-signature')?.slice('sha1='.length)\n\n    if (hmacDigest != requestedHmacDigest) {\n        console.error('Invalid digest request', 'wants: ' + hmacDigest, 'got: ' + requestedHmacDigest)\n        res.send('ok')\n        await logRequest({ subscribeObject: req.body, result: 200500, rawBody: req.body })\n        return\n    }\n\n    res.send('ok')\n\n    const subscribeObject = parseXml(req.body)\n    const updatedVideoId = subscribeObject.feed?.entry?.['yt:videoId'] as string | undefined\n\n    await logRequest({ subscribeObject, result: 200, rawBody: req.body })\n\n    return updatedVideoId\n}\n","export type DateString = string\n\nexport function asDate(dateString: DateString): Date {\n    return new Date(dateString)\n}\n","export interface URLQuery {\n    [ key: string ]: string|number|undefined\n}\n\nexport function buildUrlQuery(url: string, query: URLQuery) {\n    const queryString = Object.keys(query).map(key => {\n        const value = query[key]\n        if (typeof value == 'undefined') return\n        return encodeURIComponent(key) + '=' + encodeURIComponent(value)\n    }).filter(it =>\n        typeof it != 'undefined'\n    ).join('&')\n    return url + '?' + queryString\n}\n","import { Video } from \"../API/YouTubeApiOptions/VideosAPIOptions\";\nimport { asDate } from \"./DateString\";\n\nexport function getVideoTime(video: Video): Date {\n    if (video.liveStreamingDetails?.actualEndTime) {\n        return asDate(video.liveStreamingDetails.actualEndTime)\n    }\n    if (video.liveStreamingDetails?.scheduledStartTime) {\n        return asDate(video.liveStreamingDetails.scheduledStartTime)\n    } else {\n        return asDate(video.snippet?.publishedAt!!)\n    }\n}\n","module.exports = require(\"crypto\");","module.exports = require(\"express\");","module.exports = require(\"fast-xml-parser\");","module.exports = require(\"fs\");","module.exports = require(\"https\");","module.exports = require(\"mongodb\");","module.exports = require(\"path\");"],"sourceRoot":""}